{
  "name": "fdef-signal-analyzer",
  "version": "1.0.0",
  "description": "Production-ready automotive signal dependency analysis tool for FDEF documents",
  "main": "fdef_analyzer.py",
  "keywords": [
    "automotive", 
    "signal-analysis", 
    "fdef", 
    "pdf-processing", 
    "computer-vision", 
    "dependency-graph", 
    "a2l", 
    "autosar", 
    "can-bus"
  ],
  "authors": [
    {
      "name": "FDEF Signal Analyzer Development Team",
      "email": "info@fdef-analyzer.com"
    }
  ],
  "license": "MIT",
  "homepage": "https://github.com/fdef-analyzer/fdef-signal-analyzer",
  "repository": {
    "type": "git",
    "url": "https://github.com/fdef-analyzer/fdef-signal-analyzer.git"
  },
  "bugs": {
    "url": "https://github.com/fdef-analyzer/fdef-signal-analyzer/issues"
  },
  "python_requires": ">=3.8",
  "os_support": [
    "Windows 10+",
    "macOS 10.14+", 
    "Ubuntu 18.04+",
    "CentOS 7+",
    "Debian 9+"
  ],
  "system_dependencies": {
    "required": [
      {
        "name": "Tesseract OCR",
        "version": "4.0+",
        "description": "OCR engine for text extraction from images",
        "install_urls": {
          "windows": "https://github.com/UB-Mannheim/tesseract/wiki",
          "macos": "brew install tesseract",
          "ubuntu": "sudo apt-get install tesseract-ocr",
          "centos": "sudo yum install tesseract"
        }
      },
      {
        "name": "Poppler Utils",
        "version": "0.26+",
        "description": "PDF utilities for document conversion",
        "install_urls": {
          "windows": "https://github.com/oschwartz10612/poppler-windows",
          "macos": "brew install poppler",
          "ubuntu": "sudo apt-get install poppler-utils",
          "centos": "sudo yum install poppler-utils"
        }
      }
    ]
  },
  "python_dependencies": {
    "core": [
      "numpy>=1.20.0",
      "opencv-python>=4.5.0",
      "pillow>=8.0.0",
      "pytesseract>=0.3.8"
    ],
    "pdf_processing": [
      "PyPDF2>=2.0.0",
      "pdf2image>=1.16.0"
    ],
    "mathematical": [
      "sympy>=1.9",
      "scipy>=1.7.0"
    ],
    "graph_analysis": [
      "networkx>=2.6",
      "matplotlib>=3.5.0"
    ],
    "text_processing": [
      "fuzzywuzzy>=0.18.0",
      "python-Levenshtein>=0.12.0"
    ],
    "visualization": [
      "plotly>=5.0.0"
    ],
    "utilities": [
      "pyyaml>=5.4.0",
      "click>=8.0.0",
      "tqdm>=4.62.0"
    ],
    "development": [
      "pytest>=6.0.0",
      "pytest-cov>=2.12.0",
      "black>=21.0.0",
      "flake8>=3.9.0"
    ]
  },
  "files": {
    "core_modules": [
      "core_io.py",
      "cv_arrows.py", 
      "sympy_parser.py",
      "domain_templates.py",
      "graph_builder.py",
      "export_html.py"
    ],
    "main_application": [
      "fdef_analyzer.py"
    ],
    "setup_and_config": [
      "setup.py",
      "requirements.txt",
      "fdef_config.json"
    ],
    "testing": [
      "test_suite.py"
    ],
    "examples": [
      "examples.py"
    ],
    "utilities": [
      "utilities.py"
    ],
    "documentation": [
      "README.md",
      "CHANGELOG.md",
      "LICENSE"
    ]
  },
  "configuration": {
    "default_config_file": "fdef_config.json",
    "config_templates": [
      "fast_processing.json",
      "high_accuracy.json", 
      "automotive_specific.json",
      "debugging.json"
    ],
    "supported_formats": [
      "PDF documents (.pdf)",
      "A2L calibration files (via PDF)",
      "AUTOSAR specifications (via PDF)",
      "CAN/LIN database documentation (via PDF)",
      "Technical block diagrams (via PDF)"
    ]
  },
  "features": {
    "pdf_processing": {
      "description": "Advanced PDF loading with OCR optimization",
      "capabilities": [
        "Multi-DPI conversion",
        "Image enhancement",
        "Automotive text cleaning",
        "Page-by-page processing",
        "Confidence scoring"
      ]
    },
    "computer_vision": {
      "description": "Arrow and block detection using CV techniques",
      "capabilities": [
        "Template matching",
        "Hough line detection", 
        "Contour analysis",
        "Multi-orientation arrows",
        "Spatial relationship mapping"
      ]
    },
    "mathematical_parsing": {
      "description": "SymPy-powered equation extraction and analysis",
      "capabilities": [
        "Symbolic computation",
        "Variable dependency analysis",
        "Automotive function recognition",
        "Lookup table extraction",
        "LaTeX export"
      ]
    },
    "template_matching": {
      "description": "Domain-specific pattern recognition",
      "capabilities": [
        "A2L characteristic patterns",
        "AUTOSAR component recognition",
        "CAN/LIN signal identification", 
        "DTC code detection",
        "Calibration parameter extraction"
      ]
    },
    "graph_construction": {
      "description": "Intelligent dependency graph building",
      "capabilities": [
        "Multi-source evidence fusion",
        "Signal name normalization",
        "Cross-reference resolution",
        "Confidence weighting",
        "NetworkX integration"
      ]
    },
    "visualization": {
      "description": "Interactive HTML network visualizations",
      "capabilities": [
        "Plotly-based interactive graphs",
        "Color-coded signal types",
        "Hover details and tooltips",
        "Zoom and pan functionality",
        "Responsive design"
      ]
    }
  },
  "performance": {
    "processing_speed": "1-2 pages per second (typical)",
    "memory_usage": "100-500MB per document",
    "accuracy": "75-90% signal detection rate",
    "max_file_size": "100MB PDF files",
    "concurrent_processing": "Single-threaded with batch support"
  },
  "quality_assurance": {
    "testing": {
      "unit_tests": "Comprehensive unit test coverage",
      "integration_tests": "End-to-end pipeline testing",
      "performance_tests": "Benchmark and stress testing",
      "compatibility_tests": "Cross-platform validation"
    },
    "code_quality": {
      "type_hints": "Full type annotation coverage",
      "documentation": "Comprehensive docstrings",
      "linting": "flake8 and black formatting",
      "error_handling": "Graceful degradation"
    }
  },
  "usage": {
    "command_line": {
      "basic": "python fdef_analyzer.py document.pdf",
      "targeted": "python fdef_analyzer.py document.pdf --target-signal Engine_RPM",
      "custom_config": "python fdef_analyzer.py document.pdf --config custom.json",
      "batch": "python examples.py --example 3"
    },
    "programmatic": {
      "basic": "from fdef_analyzer import FdefAnalyzer; analyzer = FdefAnalyzer(); results = analyzer.analyze_pdf('doc.pdf')",
      "custom": "analyzer = FdefAnalyzer(config={'pdf_processing': {'dpi': 300}})"
    }
  },
  "output_formats": {
    "visualizations": [
      "Interactive HTML network diagrams",
      "Summary dashboards with metrics",
      "Responsive web-based interfaces"
    ],
    "data_exports": [
      "JSON detailed analysis reports",
      "Tab-separated signal lists",
      "CSV dependency tables",
      "NetworkX graph pickles"
    ],
    "debugging": [
      "Processed images (optional)",
      "Intermediate analysis results",
      "Confidence score breakdowns",
      "Performance timing data"
    ]
  },
  "support": {
    "documentation": [
      "Comprehensive README",
      "API reference documentation",
      "Configuration guide",
      "Troubleshooting guide"
    ],
    "examples": [
      "Basic analysis examples",
      "Batch processing scripts",
      "Custom configuration templates",
      "Programmatic usage patterns"
    ],
    "utilities": [
      "System requirements checker",
      "Performance benchmark tool",
      "Issue diagnostic utility",
      "Cleanup and maintenance scripts"
    ]
  },
  "development": {
    "architecture": "Modular design with clear interfaces",
    "extensibility": "Plugin-friendly template matching system",
    "testing": "pytest-based test suite with mocking",
    "ci_cd": "GitHub Actions compatible",
    "packaging": "pip-installable package structure"
  },
  "roadmap": {
    "v1.1": [
      "Machine learning-based signal recognition",
      "Enhanced AUTOSAR support",
      "Real-time processing capabilities"
    ],
    "v1.2": [
      "Cloud-based analysis API",
      "Advanced 3D visualizations",
      "Integration with automotive toolchains"
    ],
    "v2.0": [
      "Native support for FIBEX and ODX-D formats",
      "Multi-document cross-referencing",
      "Advanced AI-powered pattern recognition"
    ]
  },
  "changelog_url": "CHANGELOG.md",
  "license_url": "LICENSE",
  "contributing_url": "CONTRIBUTING.md"
}